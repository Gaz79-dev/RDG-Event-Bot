services:
  # The Discord Bot Service
  bot:
    build: .
    container_name: discord-squad-bot
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    # Command now points to the original bot.py entrypoint from your working branch
    command: python bot/bot.py

  # The FastAPI Web App Service
  web:
    build: .
    container_name: discord-squad-web
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8000"
    # This command runs the uvicorn server with the web-only main.py
    command: uvicorn bot.main:app --host 0.0.0.0 --port 8000
    networks:
      - squad-net

  # The Nginx Proxy Service
  nginx:
    image: nginx:latest
    container_name: discord-squad-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - squad-net

  # The PostgreSQL Database Service
  db:
    image: postgres:14
    container_name: postgres-squad-db
    restart: always
    env_file:
      - .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - squad-net

networks:
  squad-net:
    driver: bridge
